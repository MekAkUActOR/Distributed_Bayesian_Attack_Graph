attackerLocated(internet).
attackerLocated(physics).

attackGoal(control(_)).
attackGoal(execCode(_,_)).
attackGoal(inside(_)).

hacl(X,Y,_,_):-
	inSubnet(X,S),
	inSubnet(Y,S).

hacl(internet,cloudplat_webserver1,httpProtocol,httpPort).
hacl(internet,cloudplat_database1,tcp,sqlPort).


hacl(M,cloudplat_webserver1,httpProtocol,httpPort):-
	inSubnet(M,S).

hacl(N,cloudplat_database1,tcp,sqlPort):-
	inSubnet(N,S).

hacl(physics, X, _, _):-
	inSubnet(X,vsubnet1).

hacl(physics, X, _, _):-
	inSubnet(X,vsubnet2).

hacl(physics, X, _, _):-
	inSubnet(X,vsubnet3).


/******************************************/
/* configuration information of cloudplat */
/******************************************/
inSubnet(cloudplat_webserver1, cloudplat).
inSubnet(cloudplat_database1, cloudplat).
inSubnet(cloudplat_gisserver1, cloudplat).
inSubnet(cloudplat_TSPserver1, cloudplat).
inSubnet(cloudplat_TSPserver2, cloudplat).
inSubnet(cloudplat_TSPserver3, cloudplat).
inSubnet(cloudplat_OTAserver, cloudplat).
inSubnet(cloudplat_workstation1, cloudplat).

hacl(cloudplat_webserver1, internet, tcp, httpPort).

inCompetent(employee1).
hasAccount(employee1, cloudplat_webserver1, user).
hasAccount(employee1, cloudplat_database1, mysql).

/*
inCompetent(employee2).
hasAccount(employee2, cloudplat_TSPserver3, user).
hasAccount(employee2, cloudplat_OTAserver, user).
hasAccount(employee2, cloudplat_workstation1, user).
*/

networkServiceInfo(cloudplat_webserver1, httpd, httpProtocol, httpPort, apache).
networkServiceInfo(cloudplat_webserver1, sshd, tcp, sshPort, ssh).
isWebServer(cloudplat_webserver1).

/*
setuidProgramInfo(cloudplat_webserver1, 'AppXSVC', _).
vulExists(cloudplat_webserver1, 'CVE-2019-0841', 'AppXSVC').
vulProperty('CVE-2019-0841', localExploit, privEscalation).
*/

networkServiceInfo(cloudplat_database1, sql, tcp, sqlPort, mysql).
networkServiceInfo(cloudplat_database1, sshd, tcp, sshPort, ssh).
vulExists(cloudplat_database1, 'CVE-2015-1761', sql).
vulProperty('CVE-2015-1761', remoteExploit, privEscalation).

setuidProgramInfo(cloudplat_TSPserver3, sudo, _).
networkServiceInfo(cloudplat_TSPserver3, tsp3, tcp, apn3Port, tsp).
vulExists(cloudplat_TSPserver3, 'CVE-2021-3156', sudo).
vulProperty('CVE-2021-3156', localExploit, privEscalation).

setuidProgramInfo(cloudplat_OTAserver, sudo, _).
networkServiceInfo(cloudplat_OTAserver, ota, tcp, otaPort, ota).
vulExists(cloudplat_OTAserver, 'CVE-2021-3156', sudo).
vulProperty('CVE-2021-3156', localExploit, privEscalation).

/*****************************************/
/* configuration information of vsubnet1 */
/*****************************************/

inSubnet(vsubnet1_MECserver, vsubnet1).
inSubnet(vehicle1, vsubnet1).
inSubnet(mobile1, vsubnet1).
inSubnet(vehicle2, vsubnet1).
inSubnet(mobile2, vsubnet1).
inSubnet(vehicle3, vsubnet1).
inSubnet(mobile3, vsubnet1).
inSubnet(vehicle4, vsubnet1).
inSubnet(mobile4, vsubnet1).
inSubnet(vsubnet1_RSU1, vsubnet1).
inSubnet(vsubnet1_RSU2, vsubnet1).

vState(vehicle1, locked).
vState(vehicle2, mov).
vState(vehicle3, mov).
vState(vehicle4, mov).

inCompetent(vehicle1Owner).
hasAccount(vehicle1Owner, vehicle1, user).
hasAccount(vehicle1Owner, mobile1, user).
inCompetent(vehicle2Owner).
hasAccount(vehicle2Owner, vehicle2, user).
hasAccount(vehicle2Owner, mobile2, user).
inCompetent(vehicle3Owner).
hasAccount(vehicle3Owner, vehicle3, user).
hasAccount(vehicle3Owner, mobile3, user).
inCompetent(vehicle4Owner).
hasAccount(vehicle4Owner, vehicle4, user).
hasAccount(vehicle4Owner, mobile4, user).

pair(mobile1, vehicle1, bluetooth1).
pair(mobile2, vehicle2, bluetooth2).
pair(mobile3, vehicle3, bluetooth3).
pair(mobile4, vehicle4, bluetooth4).


installed(vehicle1, keyFobs).
vulExists(vehicle1, 'CVE-2020-29438', keyFobs).
vulProperty('CVE-2020-29438', phyShortExploit, infoLeak).

installed(vehicle1, obdTeslaX).
vulExists(vehicle1, 'CVE-2020-29440', obdTeslaX).
vulProperty('CVE-2020-29440', phyLocalExploit, verifiBypass).

vulExists(bluetooth1, 'CVE-2020-0022', daemons).
vulProperty('CVE-2020-0022', phyShortExploit, verifiBypass).


installed(vehicle2, obd2).
vulExists(vehicle2, 'CVE-2018-11478', obd2).
vulProperty('CVE-2018-11478', phyShortExploit, verifiBypass).


clientProgram(vehicle3, chrome).
installed(vehicle3, chrome).
vulExists(vehicle3, 'CVE-2021-21220', chrome).
vulProperty('CVE-2021-21220', remoteClient, privEscalation).

installed(vehicle3, micomd).
vulExists(vehicle3, 'CVE-2020-8539', micomd).
vulProperty('CVE-2020-8539', localExploit, verifiBypass).


/*****************************************/
/* configuration information of vsubnet2 */
/*****************************************/
inSubnet(vsubnet2_MECserver, vsubnet2).
inSubnet(vehicle5, vsubnet2).
inSubnet(mobile5, vsubnet2).
inSubnet(vehicle6, vsubnet2).
inSubnet(mobile6, vsubnet2).
inSubnet(vehicle7, vsubnet2).
inSubnet(mobile7, vsubnet2).
inSubnet(vsubnet2_RSU, vsubnet2).

vState(vehicle5, mov).
vState(vehicle6, locked).
vState(vehicle7, mov).

inCompetent(vehicle5Owner).
hasAccount(vehicle5Owner, vehicle5, user).
hasAccount(vehicle5Owner, mobile5, user).
inCompetent(vehicle6Owner).
hasAccount(vehicle6Owner, vehicle6, user).
hasAccount(vehicle6Owner, mobile6, user).
inCompetent(vehicle7Owner).
hasAccount(vehicle7Owner, vehicle7, user).
hasAccount(vehicle7Owner, mobile7, user).

pair(mobile5, vehicle5, bluetooth5).
pair(mobile6, vehicle6, wifi6).
pair(mobile7, vehicle7, bluetooth7).


installed(vehicle5, keyFobs).
vulExists(vehicle5, 'CVE-2020-29438', keyFobs).
vulProperty('CVE-2020-29438', phyShortExploit, infoLeak).

installed(vehicle5, obdTeslaX).
vulExists(vehicle5, 'CVE-2020-29440', obdTeslaX).
vulProperty('CVE-2020-29440', phyLocalExploit, verifiBypass).


vulExists(wifi6, 'CVE-2018-11477', vgateiCar2WiFi).
vulProperty('CVE-2018-11477', phyShortExploit, infoLeak).


clientProgram(mobile7, chrome).
vulExists(mobile7, 'CVE-2021-21220', chrome).
vulProperty('CVE-2021-21220', remoteClient, privEscalation).

installed(mobile7, teslaAPP).
vulExists(mobile7, vulID, teslaAPP).
vulProperty(vulID, localExploit, verifiBypass).


/*****************************************/
/* configuration information of vsubnet3 */
/*****************************************/
inSubnet(vsubnet3_MECserver, vsubnet3).
inSubnet(vehicle8, vsubnet3).
inSubnet(mobile8, vsubnet3).
inSubnet(vehicle9, vsubnet3).
inSubnet(mobile9, vsubnet3).
inSubnet(vehicle10, vsubnet3).
inSubnet(vehicle11, vsubnet3).
inSubnet(vsubnet3_RSU, vsubnet3).

vState(vehicle8, mov).
vState(vehicle9, mov).
vState(vehicle10, mov).
vState(vehicle11, unlocked).

inCompetent(vehicle8Owner).
hasAccount(vehicle8Owner, vehicle8, user).
hasAccount(vehicle8Owner, mobile8, user).
inCompetent(vehicle9Owner).
hasAccount(vehicle9Owner, vehicle9, user).
hasAccount(vehicle9Owner, mobile9, user).
inCompetent(vehicle10Owner).
hasAccount(vehicle10Owner, vehicle10, user).
inCompetent(vehicle11Owner).
hasAccount(vehicle11Owner, vehicle11, user).

pair(mobile8, vehicle8, bluetooth8).
pair(mobile9, vehicle9, wifi9).

/*
clientProgram(mobile8, chrome).
vulExists(mobile8, 'CVE-2021-21220', chrome).
vulProperty('CVE-2021-21220', remoteClient, privEscalation).
*/

setuidProgramInfo(mobile8, wifidriver, _).
vulExists(mobile8, 'CVE-2017-6424', wifidriver).
vulProperty('CVE-2017-6424', localExploit, privEscalation).


clientProgram(vehicle9, chrome).
vulExists(vehicle9, 'CVE-2021-21220', chrome).
vulProperty('CVE-2021-21220', remoteClient, privEscalation).

setuidProgramInfo(vehicle9, sudo, _).
vulExists(vehicle9, 'CVE-2021-3156', sudo).
vulProperty('CVE-2021-3156', localExploit, privEscalation).


installed(vehicle10, obd2).
vulExists(vehicle10, 'CVE-2016-2354', obd2).
vulProperty('CVE-2016-2354', phyShortExploit, verifiBypass).


installed(vehicle11, headUnitHU_NBT).
vulExists(vehicle11, 'CVE-2018-9314', headUnitHU_NBT).
vulProperty('CVE-2018-9314', phyLocalExploit, verifiBypass).


















